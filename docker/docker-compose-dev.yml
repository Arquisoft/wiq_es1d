version: '3.3'

services:
  syg-backend:
    container_name: syg-backend
    build:
      context: ../
      dockerfile: ./syg-backend/SYG-bootstrap/src/docker/backendlocal.Dockerfile
    ports:
      - 8080:8080
    restart: always
    networks:
      syg:
        aliases:
          - syg-backend
      
  syg-docker-db:
    container_name: syg-docker-db
    image: mysql:8.0.36
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=syg-db
      - MYSQL_ROOT_PASSWORD=sygAdmin
    volumes:
      - ./sql/scheme.sql:/docker-entrypoint-initdb.d/scheme.sql
    restart: always
    networks:
      syg:
        aliases:
          - syg-docker-db
          
  syg-keycloak:
    container_name: syg-keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    ports:
      - 8090:8080
    volumes:
      - ./keycloak/imports/realm.json:/opt/keycloak/data/import/realm.json
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command:
      - start-dev
      - --import-realm
    networks:
      syg:
        aliases:
          - syg-keycloak

  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus
  #   ports:
  #     - 9090:9090              
  #   volumes:
  #     - ./syg-backend/SYG-bootstrap/src/prometheus:/etc/prometheus
  #   command: ["sh", "-c", "envsubst < /etc/prometheus/prometheus.yml.template > /etc/prometheus/prometheus.yml && prometheus --config.file=/etc/prometheus/prometheus.yml"]
  #   restart: always
  #   networks:
  #     syg:
  #       aliases:
  #         - syg-prometheus

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana
  #   volumes:
  #     - ./syg-backend/SYG-bootstrap/src/grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SERVER_HTTP_PORT=9091
  #     - GF_AUTH_DISABLE_LOGIN_FORM=true
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   ports:
  #     - 9091:9091
  #   restart: always
  #   networks:
  #     syg:
  #       aliases:
  #         - syg-grafana
          
  syg-frontend:
    build:
      context: ../
      dockerfile: ./syg-frontend/frontendlocal.Dockerfile
    ports:
      - 3000:80
    networks:
      syg:
        aliases:
          - syg-frontend

networks:
    syg:
      driver: bridge